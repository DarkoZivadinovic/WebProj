// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace WebProjDarko.Migrations
{
    [DbContext(typeof(FilmotekaContext))]
    partial class FilmotekaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Models.Film", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("FilmotekaID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Sifra")
                        .HasColumnType("int");

                    b.Property<int?>("ZanrID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("FilmotekaID");

                    b.HasIndex("ZanrID");

                    b.ToTable("Film");
                });

            modelBuilder.Entity("Models.Filmoteka", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Filmoteka");
                });

            modelBuilder.Entity("Models.Iznajmljivanje", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("FilmID")
                        .HasColumnType("int");

                    b.Property<int?>("FilmotekaID")
                        .HasColumnType("int");

                    b.Property<int?>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<int?>("MesecID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("FilmID");

                    b.HasIndex("FilmotekaID");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("MesecID");

                    b.ToTable("Iznajmljivanje");
                });

            modelBuilder.Entity("Models.Korisnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("FilmotekaID")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("RegistarskiBroj")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("FilmotekaID");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("Models.Mesec", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ID");

                    b.ToTable("Mesec");
                });

            modelBuilder.Entity("Models.Zanr", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("Zanr");
                });

            modelBuilder.Entity("Models.Film", b =>
                {
                    b.HasOne("Models.Filmoteka", "Filmoteka")
                        .WithMany("FilmotekaFilm")
                        .HasForeignKey("FilmotekaID");

                    b.HasOne("Models.Zanr", "Zanr")
                        .WithMany("FilmZanr")
                        .HasForeignKey("ZanrID");

                    b.Navigation("Filmoteka");

                    b.Navigation("Zanr");
                });

            modelBuilder.Entity("Models.Iznajmljivanje", b =>
                {
                    b.HasOne("Models.Film", "Film")
                        .WithMany("FilmKorisnik")
                        .HasForeignKey("FilmID");

                    b.HasOne("Models.Filmoteka", "Filmoteka")
                        .WithMany("FilmFilmoteka")
                        .HasForeignKey("FilmotekaID");

                    b.HasOne("Models.Korisnik", "Korisnik")
                        .WithMany("KorisnikFilm")
                        .HasForeignKey("KorisnikID");

                    b.HasOne("Models.Mesec", "Mesec")
                        .WithMany("MesecIznajmljivanje")
                        .HasForeignKey("MesecID");

                    b.Navigation("Film");

                    b.Navigation("Filmoteka");

                    b.Navigation("Korisnik");

                    b.Navigation("Mesec");
                });

            modelBuilder.Entity("Models.Korisnik", b =>
                {
                    b.HasOne("Models.Filmoteka", "Filmoteka")
                        .WithMany("FilmotekaKorisnik")
                        .HasForeignKey("FilmotekaID");

                    b.Navigation("Filmoteka");
                });

            modelBuilder.Entity("Models.Film", b =>
                {
                    b.Navigation("FilmKorisnik");
                });

            modelBuilder.Entity("Models.Filmoteka", b =>
                {
                    b.Navigation("FilmFilmoteka");

                    b.Navigation("FilmotekaFilm");

                    b.Navigation("FilmotekaKorisnik");
                });

            modelBuilder.Entity("Models.Korisnik", b =>
                {
                    b.Navigation("KorisnikFilm");
                });

            modelBuilder.Entity("Models.Mesec", b =>
                {
                    b.Navigation("MesecIznajmljivanje");
                });

            modelBuilder.Entity("Models.Zanr", b =>
                {
                    b.Navigation("FilmZanr");
                });
#pragma warning restore 612, 618
        }
    }
}
